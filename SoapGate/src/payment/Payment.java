package payment;

import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.UnknownHostException;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.4.redhat-1
 * 2016-12-09T13:24:02.001+03:00
 * Generated source version: 3.1.4.redhat-1
 * 
 */


// http://192.168.77.159:8080/cortexws-dev/services/Payment?wsdl - work
// http://192.168.87.159:8080/cortexws-dev/services/Payment?wsdl - test

@WebServiceClient(name = "Payment", 
                  wsdlLocation = "http://192.168.87.159:8080/cortexws-dev/services/Payment?wsdl",
                  targetNamespace = "http://service.transaction.cortexws.d8.lv") 

public class Payment extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.transaction.cortexws.d8.lv", "Payment");
    public final static QName PaymentSOAP11PortHttp = new QName("http://service.transaction.cortexws.d8.lv", "PaymentSOAP11port_http");
    public final static QName PaymentSOAP12PortHttp = new QName("http://service.transaction.cortexws.d8.lv", "PaymentSOAP12port_http");
    public final static QName PaymentHttpport = new QName("http://service.transaction.cortexws.d8.lv", "PaymentHttpport");
    static {
        URL url = null;
    	System.out.println("Payment init");
    	try {
    		String localIP=InetAddress.getLocalHost().getHostAddress();
			
			if (localIP.equals("10.1.204.113"))
				url = new URL("http://192.168.87.159:8080/cortexws-dev/services/Payment?wsdl");
			if (localIP.equals("10.1.204.19"))
				url = new URL("http://192.168.77.159:8080/cortexws-dev/services/Payment?wsdl");
			System.out.println("localIP: "+localIP+"; WSDL: "+url.toString());
				
		} catch (UnknownHostException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
   	 	catch (MalformedURLException e) {
             java.util.logging.Logger.getLogger(Payment.class.getName())
                 .log(java.util.logging.Level.INFO, 
                      "Can not initialize the default wsdl from {0}", url.toString());
        }     
        WSDL_LOCATION = url;
        //System.out.println("class Payment");
        //java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.INFO, "class Payment");
    }

    public Payment(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Payment(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Payment() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public Payment(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public Payment(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public Payment(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns PaymentPortType
     */
    @WebEndpoint(name = "PaymentSOAP11port_http")
    public PaymentPortType getPaymentSOAP11PortHttp() {
        return super.getPort(PaymentSOAP11PortHttp, PaymentPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PaymentPortType
     */
    @WebEndpoint(name = "PaymentSOAP11port_http")
    public PaymentPortType getPaymentSOAP11PortHttp(WebServiceFeature... features) {
        return super.getPort(PaymentSOAP11PortHttp, PaymentPortType.class, features);
    }


    /**
     *
     * @return
     *     returns PaymentPortType
     */
    @WebEndpoint(name = "PaymentSOAP12port_http")
    public PaymentPortType getPaymentSOAP12PortHttp() {
        return super.getPort(PaymentSOAP12PortHttp, PaymentPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PaymentPortType
     */
    @WebEndpoint(name = "PaymentSOAP12port_http")
    public PaymentPortType getPaymentSOAP12PortHttp(WebServiceFeature... features) {
        return super.getPort(PaymentSOAP12PortHttp, PaymentPortType.class, features);
    }


    /**
     *
     * @return
     *     returns PaymentPortType
     */
    @WebEndpoint(name = "PaymentHttpport")
    public PaymentPortType getPaymentHttpport() {
        return super.getPort(PaymentHttpport, PaymentPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PaymentPortType
     */
    @WebEndpoint(name = "PaymentHttpport")
    public PaymentPortType getPaymentHttpport(WebServiceFeature... features) {
        return super.getPort(PaymentHttpport, PaymentPortType.class, features);
    }

}
