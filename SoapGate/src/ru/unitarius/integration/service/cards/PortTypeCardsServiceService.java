package ru.unitarius.integration.service.cards;

import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.UnknownHostException;

import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import ctxdbo.CTXDBO;

import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.4.redhat-1
 * 2017-07-12T14:09:48.775+03:00
 * Generated source version: 3.1.4.redhat-1
 * 
 */
@WebServiceClient(name = "PortTypeCardsServiceService", 
                  wsdlLocation = "http://10.1.204.51:8184/cxf/cards?wsdl",
                  targetNamespace = "http://unitarius.ru/integration/service/cards") 
public class PortTypeCardsServiceService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://unitarius.ru/integration/service/cards", "PortTypeCardsServiceService");
    public final static QName PortTypeCardsServicePort = new QName("http://unitarius.ru/integration/service/cards", "PortTypeCardsServicePort");
    static {
        URL url = null;

    	System.out.println("PortTypeCardsServicePort init");
    	try {
    		String localIP=InetAddress.getLocalHost().getHostAddress();
			
			if (localIP.equals("10.1.204.113"))
				url = new URL("http://10.1.204.51:8184/cxf/cards?wsdl");
			if (localIP.equals("10.1.204.19"))
				url = new URL("http://10.1.204.54:8184/cxf/cards?wsdl");
			System.out.println("localIP: "+localIP+"; WSDL: "+url.toString());
				
		} catch (UnknownHostException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
   	 	catch (MalformedURLException e) {
             java.util.logging.Logger.getLogger(CTXDBO.class.getName())
                 .log(java.util.logging.Level.INFO, 
                      "Can not initialize the default wsdl from {0}", url.toString());
        }
        
        WSDL_LOCATION = url;
        
    }

    public PortTypeCardsServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PortTypeCardsServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PortTypeCardsServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public PortTypeCardsServiceService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public PortTypeCardsServiceService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public PortTypeCardsServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns PortTypeCardsService
     */
    @WebEndpoint(name = "PortTypeCardsServicePort")
    public PortTypeCardsService getPortTypeCardsServicePort() {
        return super.getPort(PortTypeCardsServicePort, PortTypeCardsService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PortTypeCardsService
     */
    @WebEndpoint(name = "PortTypeCardsServicePort")
    public PortTypeCardsService getPortTypeCardsServicePort(WebServiceFeature... features) {
        return super.getPort(PortTypeCardsServicePort, PortTypeCardsService.class, features);
    }

}
